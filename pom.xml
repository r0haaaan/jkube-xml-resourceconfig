<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.eclipse.jkube</groupId>
  <artifactId>jkube-xml-resourceconfig</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <properties>
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkus-plugin.version>1.13.2.Final</quarkus-plugin.version>
    <quarkus.platform.artifact-id>quarkus-universe-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
    <quarkus.platform.version>1.13.2.Final</quarkus.platform.version>
    <surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
    <quarkus.package.type>uber-jar</quarkus.package.type>
    <jkube.version>1.2.0</jkube.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus-plugin.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <parameters>${maven.compiler.parameters}</parameters>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jkube</groupId>
        <artifactId>kubernetes-maven-plugin</artifactId>
        <version>${jkube.version}</version>
        <configuration>
          <resources>
            <!-- Environment variables -->
            <env>
              <organization>Eclipse Foundation</organization>
              <org>jkube</org>
            </env>
            <!-- Label -->
            <labels>
              <all>
                <version>${project.version}</version>
                <artifactId>${project.artifactId}</artifactId>
                <event>log</event>
              </all>
              <deployment>
                <my>deployment</my>
              </deployment>
            </labels>
            <!-- Annotation -->
            <annotations>
              <all>
                <version>${project.version}</version>
                <artifactId>${project.artifactId}</artifactId>
                <event>log</event>
              </all>
              <deployment>
                <my>deployment</my>
              </deployment>
            </annotations>
            <!-- Volume -->
            <volumes>
              <volume>
                <name>scratch</name>
                <type>emptyDir</type>
                <medium>Memory</medium>
                <mounts>
                  <mount>/var/scratch</mount>
                </mounts>
              </volume>
            </volumes>
            <!-- Secret -->
            <secrets>
                <secret>
                  <name>my-own-secret</name>
                  <dockerServerId>https://index.docker.io/v1/</dockerServerId>
                </secret>
            </secrets>
            <!-- Controller Name -->
            <controllerName>rokumar-xml-resourceconfig</controllerName>
            <!-- Service -->
            <services>
              <service>
                <name>rokumar-xml-resourceconfig-service</name>
                <expose>true</expose>
                <ports>
                  <port>
                    <port>8080</port>
                    <targetPort>8080</targetPort>
                    <protocol>TCP</protocol>
                    <name>http</name>
                  </port>
                </ports>
              </service>
            </services>
            <!-- Remote Fragments -->
            <remotes>
              <remote>https://gist.githubusercontent.com/rohanKanojia/752930001f8ad811d9b4206ef791cb43/raw/9fc5927daf4087bd900fec0d67c61f5d27f9bab3/configmap.yml</remote>
            </remotes>
            <!-- ConfigMap -->
            <configMap>
              <name>rokumar</name>
              <entries>
                <entry>
                  <name>key1</name>
                  <value>value1</value>
                </entry>
                <entry>
                  <name>key2</name>
                  <value>value2</value>
                </entry>
                <entry>
                  <name>key3</name>
                  <file>${project.basedir}/src/main/resources/META-INF/resources/index.html</file>
                </entry>
              </entries>
            </configMap>
            <!-- Liveness Probe -->
            <liveness>
              <getUrl>http://localhost:8080/q/health</getUrl>
              <tcpPort>8080</tcpPort>
              <initialDelaySeconds>3</initialDelaySeconds>
              <timeoutSeconds>3</timeoutSeconds>
            </liveness>
            <!-- Readiness Probe -->
<!--            <readiness>-->
<!--              <getUrl>http://localhost:8080/hello-resteasy</getUrl>-->
<!--              <tcpPort>8080</tcpPort>-->
<!--              <initialDelaySeconds>3</initialDelaySeconds>-->
<!--              <timeoutSeconds>3</timeoutSeconds>-->
<!--              <failureThreshold>3</failureThreshold>-->
<!--            </readiness>-->

            <metrics>
              <port>8080</port>
              <scheme>foo</scheme>
            </metrics>
            <containerPrivileged>true</containerPrivileged>
            <imagePullPolicy>Always</imagePullPolicy>
            <replicas>3</replicas>
            <namespace>rokumar</namespace>
            <!-- Service Account -->
            <serviceAccounts>
              <serviceAccount>
                <name>rokumar-serviceaccount</name>
                <deploymentRef>rokumar-xml-resourceconfig</deploymentRef>
              </serviceAccount>
            </serviceAccounts>
            <!-- Ingress -->
            <ingress>
              <ingressRules>
                <ingressRule>
                  <host>hello.example.systems</host>
                  <paths>
                    <path>
                      <pathType>ImplementationSpecific</pathType>
                      <path>/</path>
                      <serviceName>rokumar-xml-resourceconfig-service</serviceName>
                      <servicePort>8080</servicePort>
                    </path>
                  </paths>
                </ingressRule>
              </ingressRules>
            </ingress>
          </resources>
        </configuration>
      </plugin>
        <plugin>
          <groupId>org.eclipse.jkube</groupId>
          <artifactId>openshift-maven-plugin</artifactId>
          <version>${jkube.version}</version>
          <configuration>
            <resources>
              <openshiftBuildConfig>
                <requests>
                  <cpu>500m</cpu>
                  <memory>512Mi</memory>
                </requests>
                <limits>
                  <cpu>1000m</cpu>
                  <memory>1Gi</memory>
                </limits>
              </openshiftBuildConfig>
            </resources>
          </configuration>
        </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemPropertyVariables>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    <maven.home>${maven.home}</maven.home>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
  </profiles>
</project>
